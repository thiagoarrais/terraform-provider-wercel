/*
 * Vercel API
 *
 * Unnofficial OpenAPI description for the Vercel API
 *
 * API version: 0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// ProjectLink struct for ProjectLink
type ProjectLink struct {
	Type             string  `json:"type"`
	Org              *string `json:"org,omitempty"`
	ProjectId        *string `json:"projectId,omitempty"`
	ProjectName      *string `json:"projectName,omitempty"`
	ProjectNamespace *string `json:"projectNamespace,omitempty"`
	ProjectUrl       *string `json:"projectUrl,omitempty"`
	ProductionBranch *string `json:"productionBranch,omitempty"`
	Repo             *string `json:"repo,omitempty"`
	RepoId           *int32  `json:"repoId,omitempty"`
}

// NewProjectLink instantiates a new ProjectLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectLink(type_ string) *ProjectLink {
	this := ProjectLink{}
	this.Type = type_
	return &this
}

// NewProjectLinkWithDefaults instantiates a new ProjectLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectLinkWithDefaults() *ProjectLink {
	this := ProjectLink{}
	return &this
}

// GetType returns the Type field value
func (o *ProjectLink) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ProjectLink) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ProjectLink) SetType(v string) {
	o.Type = v
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *ProjectLink) GetOrg() string {
	if o == nil || o.Org == nil {
		var ret string
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectLink) GetOrgOk() (*string, bool) {
	if o == nil || o.Org == nil {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *ProjectLink) HasOrg() bool {
	if o != nil && o.Org != nil {
		return true
	}

	return false
}

// SetOrg gets a reference to the given string and assigns it to the Org field.
func (o *ProjectLink) SetOrg(v string) {
	o.Org = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ProjectLink) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectLink) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ProjectLink) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ProjectLink) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *ProjectLink) GetProjectName() string {
	if o == nil || o.ProjectName == nil {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectLink) GetProjectNameOk() (*string, bool) {
	if o == nil || o.ProjectName == nil {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *ProjectLink) HasProjectName() bool {
	if o != nil && o.ProjectName != nil {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *ProjectLink) SetProjectName(v string) {
	o.ProjectName = &v
}

// GetProjectNamespace returns the ProjectNamespace field value if set, zero value otherwise.
func (o *ProjectLink) GetProjectNamespace() string {
	if o == nil || o.ProjectNamespace == nil {
		var ret string
		return ret
	}
	return *o.ProjectNamespace
}

// GetProjectNamespaceOk returns a tuple with the ProjectNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectLink) GetProjectNamespaceOk() (*string, bool) {
	if o == nil || o.ProjectNamespace == nil {
		return nil, false
	}
	return o.ProjectNamespace, true
}

// HasProjectNamespace returns a boolean if a field has been set.
func (o *ProjectLink) HasProjectNamespace() bool {
	if o != nil && o.ProjectNamespace != nil {
		return true
	}

	return false
}

// SetProjectNamespace gets a reference to the given string and assigns it to the ProjectNamespace field.
func (o *ProjectLink) SetProjectNamespace(v string) {
	o.ProjectNamespace = &v
}

// GetProjectUrl returns the ProjectUrl field value if set, zero value otherwise.
func (o *ProjectLink) GetProjectUrl() string {
	if o == nil || o.ProjectUrl == nil {
		var ret string
		return ret
	}
	return *o.ProjectUrl
}

// GetProjectUrlOk returns a tuple with the ProjectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectLink) GetProjectUrlOk() (*string, bool) {
	if o == nil || o.ProjectUrl == nil {
		return nil, false
	}
	return o.ProjectUrl, true
}

// HasProjectUrl returns a boolean if a field has been set.
func (o *ProjectLink) HasProjectUrl() bool {
	if o != nil && o.ProjectUrl != nil {
		return true
	}

	return false
}

// SetProjectUrl gets a reference to the given string and assigns it to the ProjectUrl field.
func (o *ProjectLink) SetProjectUrl(v string) {
	o.ProjectUrl = &v
}

// GetProductionBranch returns the ProductionBranch field value if set, zero value otherwise.
func (o *ProjectLink) GetProductionBranch() string {
	if o == nil || o.ProductionBranch == nil {
		var ret string
		return ret
	}
	return *o.ProductionBranch
}

// GetProductionBranchOk returns a tuple with the ProductionBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectLink) GetProductionBranchOk() (*string, bool) {
	if o == nil || o.ProductionBranch == nil {
		return nil, false
	}
	return o.ProductionBranch, true
}

// HasProductionBranch returns a boolean if a field has been set.
func (o *ProjectLink) HasProductionBranch() bool {
	if o != nil && o.ProductionBranch != nil {
		return true
	}

	return false
}

// SetProductionBranch gets a reference to the given string and assigns it to the ProductionBranch field.
func (o *ProjectLink) SetProductionBranch(v string) {
	o.ProductionBranch = &v
}

// GetRepo returns the Repo field value if set, zero value otherwise.
func (o *ProjectLink) GetRepo() string {
	if o == nil || o.Repo == nil {
		var ret string
		return ret
	}
	return *o.Repo
}

// GetRepoOk returns a tuple with the Repo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectLink) GetRepoOk() (*string, bool) {
	if o == nil || o.Repo == nil {
		return nil, false
	}
	return o.Repo, true
}

// HasRepo returns a boolean if a field has been set.
func (o *ProjectLink) HasRepo() bool {
	if o != nil && o.Repo != nil {
		return true
	}

	return false
}

// SetRepo gets a reference to the given string and assigns it to the Repo field.
func (o *ProjectLink) SetRepo(v string) {
	o.Repo = &v
}

// GetRepoId returns the RepoId field value if set, zero value otherwise.
func (o *ProjectLink) GetRepoId() int32 {
	if o == nil || o.RepoId == nil {
		var ret int32
		return ret
	}
	return *o.RepoId
}

// GetRepoIdOk returns a tuple with the RepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectLink) GetRepoIdOk() (*int32, bool) {
	if o == nil || o.RepoId == nil {
		return nil, false
	}
	return o.RepoId, true
}

// HasRepoId returns a boolean if a field has been set.
func (o *ProjectLink) HasRepoId() bool {
	if o != nil && o.RepoId != nil {
		return true
	}

	return false
}

// SetRepoId gets a reference to the given int32 and assigns it to the RepoId field.
func (o *ProjectLink) SetRepoId(v int32) {
	o.RepoId = &v
}

func (o ProjectLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.Org != nil {
		toSerialize["org"] = o.Org
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.ProjectName != nil {
		toSerialize["projectName"] = o.ProjectName
	}
	if o.ProjectNamespace != nil {
		toSerialize["projectNamespace"] = o.ProjectNamespace
	}
	if o.ProjectUrl != nil {
		toSerialize["projectUrl"] = o.ProjectUrl
	}
	if o.ProductionBranch != nil {
		toSerialize["productionBranch"] = o.ProductionBranch
	}
	if o.Repo != nil {
		toSerialize["repo"] = o.Repo
	}
	if o.RepoId != nil {
		toSerialize["repoId"] = o.RepoId
	}
	return json.Marshal(toSerialize)
}

type NullableProjectLink struct {
	value *ProjectLink
	isSet bool
}

func (v NullableProjectLink) Get() *ProjectLink {
	return v.value
}

func (v *NullableProjectLink) Set(val *ProjectLink) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectLink) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectLink(val *ProjectLink) *NullableProjectLink {
	return &NullableProjectLink{value: val, isSet: true}
}

func (v NullableProjectLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
