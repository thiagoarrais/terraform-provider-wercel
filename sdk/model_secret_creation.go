/*
 * Vercel API
 *
 * Unnofficial OpenAPI description for the Vercel API
 *
 * API version: 0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// SecretCreation struct for SecretCreation
type SecretCreation struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// NewSecretCreation instantiates a new SecretCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretCreation(name string, value string) *SecretCreation {
	this := SecretCreation{}
	this.Name = name
	this.Value = value
	return &this
}

// NewSecretCreationWithDefaults instantiates a new SecretCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretCreationWithDefaults() *SecretCreation {
	this := SecretCreation{}
	return &this
}

// GetName returns the Name field value
func (o *SecretCreation) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SecretCreation) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SecretCreation) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *SecretCreation) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SecretCreation) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SecretCreation) SetValue(v string) {
	o.Value = v
}

func (o SecretCreation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableSecretCreation struct {
	value *SecretCreation
	isSet bool
}

func (v NullableSecretCreation) Get() *SecretCreation {
	return v.value
}

func (v *NullableSecretCreation) Set(val *SecretCreation) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretCreation) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretCreation(val *SecretCreation) *NullableSecretCreation {
	return &NullableSecretCreation{value: val, isSet: true}
}

func (v NullableSecretCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
