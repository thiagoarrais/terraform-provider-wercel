openapi: 3.0.0
info:
  description: Unnofficial OpenAPI description for the Vercel API
  title: Vercel API
  version: "0.1"
servers:
- description: Main Vercel API endpoint
  url: https://api.vercel.com
security:
- bearerAuth: []
paths:
  /v1/projects/{id}:
    delete:
      operationId: removeProjectById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Projects
    get:
      operationId: getProjectById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Projects
  /v1/projects/{projectId}/alias:
    delete:
      operationId: removeAliasFromProject
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: domain
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Projects
    post:
      operationId: addAliasToProject
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AliasInclusion'
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Projects
  /v6/projects:
    post:
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Project already exists
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Projects
  /v4/projects/{id}/link:
    delete:
      operationId: removeLinkByProjectId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Projects
    post:
      operationId: createLinkByProjectId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitRepositoryLink'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Projects
  /v6/projects/{id}/env:
    get:
      operationId: getProjectEnvironmentVariables
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Projects
    post:
      operationId: createProjectEnvironmentVariable
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableCreation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariable'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Projects
  /v4/projects/{projectId}/env/{key}:
    delete:
      operationId: deleteEnvironmentVariable
      parameters:
      - explode: false
        in: path
        name: projectId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: target
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Projects
  /v13/now/deployments:
    post:
      operationId: createNewDeployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentCreation'
      responses:
        "200":
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Deployments
  /v2/now/secrets:
    post:
      operationId: createNewSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretCreation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Secrets
  /v2/now/secrets/{name}:
    delete:
      operationId: removeSecret
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      tags:
      - Secrets
components:
  responses:
    Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Unexpected error
  schemas:
    Error:
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
      type: object
    Project:
      example:
        name: name
        link:
          projectUrl: projectUrl
          productionBranch: productionBranch
          projectNamespace: projectNamespace
          type: type
          projectName: projectName
          projectId: projectId
        alias:
        - domain: domain
        - domain: domain
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        link:
          $ref: '#/components/schemas/Project_link'
        alias:
          items:
            $ref: '#/components/schemas/Project_alias'
          type: array
      required:
      - id
      - name
      type: object
    ProjectCreation:
      example:
        gitRepository:
          repo: repo
          type: github
          sourceless: true
        name: name
      properties:
        name:
          type: string
        gitRepository:
          $ref: '#/components/schema/GitRepositoryLink'
      required:
      - name
      type: object
    DeploymentCreation:
      example:
        gitSource:
          ref: ref
          type: type
          projectId: projectId
        name: name
        source: source
        target: staging
      properties:
        name:
          type: string
        target:
          enum:
          - staging
          - production
          type: string
        source:
          type: string
        gitSource:
          $ref: '#/components/schemas/DeploymentCreation_gitSource'
      required:
      - name
      type: object
    GitRepositoryLink:
      example:
        repo: repo
        type: github
        sourceless: true
      properties:
        type:
          enum:
          - github
          - gitlab
          - bitbucket
          type: string
        repo:
          type: string
        sourceless:
          type: boolean
      required:
      - repo
      - type
      type: object
    AliasInclusion:
      example:
        domain: domain
      properties:
        domain:
          type: string
      required:
      - domain
      type: object
    SecretCreation:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    Secret:
      example:
        uid: uid
        created: 2000-01-23
        name: name
        userId: userId
        value:
          data:
          - 0
          - 0
          type: type
      properties:
        uid:
          type: string
        name:
          type: string
        created:
          format: date
          type: string
        userId:
          type: string
        value:
          $ref: '#/components/schemas/Secret_value'
      required:
      - name
      - uid
      type: object
    EnvironmentVariableCreation:
      example:
        type: plain
        value: value
        key: key
        target:
        - development
        - development
      properties:
        type:
          enum:
          - plain
          - secret
          - system
          type: string
        key:
          type: string
        value:
          type: string
        target:
          items:
            enum:
            - development
            - preview
            - production
            type: string
          type: array
      required:
      - key
      - target
      - type
      - value
      type: object
    EnvironmentVariable:
      example:
        createdAt: 0
        id: id
        type: plain
        value: value
        key: key
        updatedAt: 6
      properties:
        type:
          enum:
          - plain
          - secret
          - system
          type: string
        id:
          type: string
        key:
          type: string
        value:
          type: string
        target:
          $ref: '#/components/schema/EnvironmentVariableTarget'
        createdAt:
          format: int64
          type: integer
        updatedAt:
          format: int64
          type: integer
      required:
      - id
      - key
      - type
      type: object
    TargetEnvironment:
      enum:
      - development
      - preview
      - production
      type: string
    TargetEnvironmentList:
      items:
        $ref: '#/components/schemas/TargetEnvironment'
      type: array
    EnvironmentVariableTarget:
      oneOf:
      - $ref: '#/components/schemas/TargetEnvironment'
      - $ref: '#/components/schemas/TargetEnvironmentList'
    inline_response_200:
      example:
        envs:
        - createdAt: 0
          id: id
          type: plain
          value: value
          key: key
          updatedAt: 6
        - createdAt: 0
          id: id
          type: plain
          value: value
          key: key
          updatedAt: 6
      properties:
        envs:
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
      type: object
    Project_link:
      example:
        projectUrl: projectUrl
        productionBranch: productionBranch
        projectNamespace: projectNamespace
        type: type
        projectName: projectName
        projectId: projectId
      properties:
        type:
          type: string
        projectId:
          type: string
        projectName:
          type: string
        projectNamespace:
          type: string
        projectUrl:
          type: string
        productionBranch:
          type: string
      required:
      - type
      type: object
    Project_alias:
      example:
        domain: domain
      properties:
        domain:
          type: string
      required:
      - domain
      type: object
    DeploymentCreation_gitSource:
      example:
        ref: ref
        type: type
        projectId: projectId
      properties:
        type:
          type: string
        ref:
          type: string
        projectId:
          type: string
      type: object
    Secret_value:
      example:
        data:
        - 0
        - 0
        type: type
      properties:
        type:
          type: string
        data:
          items:
            type: integer
          type: array
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
