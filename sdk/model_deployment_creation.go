/*
 * Vercel API
 *
 * Unnofficial OpenAPI description for the Vercel API
 *
 * API version: 0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// DeploymentCreation struct for DeploymentCreation
type DeploymentCreation struct {
	Name      string                       `json:"name"`
	Target    *string                      `json:"target,omitempty"`
	Source    *string                      `json:"source,omitempty"`
	GitSource *DeploymentCreationGitSource `json:"gitSource,omitempty"`
}

// NewDeploymentCreation instantiates a new DeploymentCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentCreation(name string) *DeploymentCreation {
	this := DeploymentCreation{}
	this.Name = name
	return &this
}

// NewDeploymentCreationWithDefaults instantiates a new DeploymentCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentCreationWithDefaults() *DeploymentCreation {
	this := DeploymentCreation{}
	return &this
}

// GetName returns the Name field value
func (o *DeploymentCreation) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DeploymentCreation) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DeploymentCreation) SetName(v string) {
	o.Name = v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *DeploymentCreation) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCreation) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *DeploymentCreation) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *DeploymentCreation) SetTarget(v string) {
	o.Target = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *DeploymentCreation) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCreation) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *DeploymentCreation) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *DeploymentCreation) SetSource(v string) {
	o.Source = &v
}

// GetGitSource returns the GitSource field value if set, zero value otherwise.
func (o *DeploymentCreation) GetGitSource() DeploymentCreationGitSource {
	if o == nil || o.GitSource == nil {
		var ret DeploymentCreationGitSource
		return ret
	}
	return *o.GitSource
}

// GetGitSourceOk returns a tuple with the GitSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCreation) GetGitSourceOk() (*DeploymentCreationGitSource, bool) {
	if o == nil || o.GitSource == nil {
		return nil, false
	}
	return o.GitSource, true
}

// HasGitSource returns a boolean if a field has been set.
func (o *DeploymentCreation) HasGitSource() bool {
	if o != nil && o.GitSource != nil {
		return true
	}

	return false
}

// SetGitSource gets a reference to the given DeploymentCreationGitSource and assigns it to the GitSource field.
func (o *DeploymentCreation) SetGitSource(v DeploymentCreationGitSource) {
	o.GitSource = &v
}

func (o DeploymentCreation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.GitSource != nil {
		toSerialize["gitSource"] = o.GitSource
	}
	return json.Marshal(toSerialize)
}

type NullableDeploymentCreation struct {
	value *DeploymentCreation
	isSet bool
}

func (v NullableDeploymentCreation) Get() *DeploymentCreation {
	return v.value
}

func (v *NullableDeploymentCreation) Set(val *DeploymentCreation) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentCreation) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentCreation(val *DeploymentCreation) *NullableDeploymentCreation {
	return &NullableDeploymentCreation{value: val, isSet: true}
}

func (v NullableDeploymentCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
